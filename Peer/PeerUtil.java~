/**
* Class PeerUtil to pass reference to data object to threads. Class Object is shared among DownloadPeer Thread and Upload Peer Thread.
**/
import java.util.HashMap;
public class PeerUtil
{
	private HashMap<String,Boolean> chunksMap;
	private String fileName;
	private int totalChunks;
	private int downloadPeerPort;
	private int uploadPeerPort;
	private int chunkSize;

	public PeerUtil(String fileName, int totalChunks,int downloadPeerPort,int uploadPeerPort, int chunkSize)
	{
	this.fileName = fileName;
	this.totalChunks = totalChunks;
	this.downloadPeerPort = downloadPeerPort;
	this.uploadPeerPort = uploadPeerPort;
	this.chunkSize = chunkSize;
	initialiseChunkMap();
	}	
	/**
	* method initialiseChunkMap private method to initialise chunkMap to set all chunk value to false.
	**/
	private void initialiseChunkMap()
	{
		chunksMap = new HashMap<String,Boolean>();
                for(int i=0;i<size;i++)
                {
                        String chunkName = fileName+".chunk."+i;
                        chunksMap.put(chunkName,false);
                }
	}
	/**
	* method setChunkMap used to update chunkMap when any of the chunk Map is recieved. 
	**/
	public void setChunkMap(int id,Boolean value)
	{
			String chunkName = fileName+ ".chunk."+id;
			chunksMap.put(chunkName, value);
	}
	
};
